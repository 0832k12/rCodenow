{"version":3,"file":"ebb29433c3000ca9948a.worker.js","sources":["webpack://GUI/webpack/bootstrap","webpack://GUI/./node_modules/scratch-storage/src/FetchWorkerTool.worker.js","webpack://GUI/./node_modules/scratch-storage/src/safer-fetch.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-storage/src/FetchWorkerTool.worker.js\");\n","/* eslint-env worker */\n\nconst saferFetchAsArrayBuffer = require('./safer-fetch');\n\nconst complete = [];\n\nlet timeoutId = null;\n\nconst checkCompleted = () => {\n    if (timeoutId) return;\n    timeoutId = setTimeout(() => {\n        timeoutId = null;\n        if (complete.length) {\n            // Send our chunk of completed requests and instruct postMessage to\n            // transfer the buffers instead of copying them.\n            postMessage(\n                complete.slice(),\n                // Instruct postMessage that these buffers in the sent message\n                // should use their Transferable trait. After the postMessage\n                // call the \"buffers\" will still be in complete if you looked,\n                // but they will all be length 0 as the data they reference has\n                // been sent to the window. This lets us send a lot of data\n                // without the normal postMessage behaviour of making a copy of\n                // all of the data for the window.\n                complete.map(response => response.buffer).filter(Boolean)\n            );\n            complete.length = 0;\n        }\n    });\n};\n\n/**\n * Receive a job from the parent and fetch the requested data.\n * @param {object} options.job A job id, url, and options descriptor to perform.\n */\nconst onMessage = ({data: job}) => {\n    saferFetchAsArrayBuffer(job.url, job.options)\n        .then(buffer => complete.push({id: job.id, buffer}))\n        .catch(error => complete.push({id: job.id, error: (error && error.message) || `Failed request: ${job.url}`}))\n        .then(checkCompleted);\n};\n\nif (self.fetch) {\n    postMessage({support: {fetch: true}});\n    self.addEventListener('message', onMessage);\n} else {\n    postMessage({support: {fetch: false}});\n    self.addEventListener('message', ({data: job}) => {\n        postMessage([{id: job.id, error: 'fetch is unavailable'}]);\n    });\n}\n","/* eslint-env browser */\n/* eslint-disable no-use-before-define */\n\n// This throttles and retries fetch() to mitigate the effect of random network errors and\n// random browser errors (especially in Chrome)\n\nlet currentFetches = 0;\nconst queue = [];\n\nconst startNextFetch = ([resolve, url, options]) => {\n    let firstError;\n    let failedAttempts = 0;\n\n    const attemptToFetch = () => fetch(url, options)\n        .then(result => {\n            // In a macOS WKWebView, requests from file: URLs to other file: URLs always have status: 0 and ok: false\n            // even though the requests were successful. If the requested file doesn't exist, fetch() rejects instead.\n            // We aren't aware of any other cases where fetch() can resolve with status 0, so this should be safe.\n            if (result.ok || result.status === 0) return result.arrayBuffer();\n            if (result.status === 404) return null;\n            return Promise.reject(result.status);\n        })\n        .then(buffer => {\n            currentFetches--;\n            checkStartNextFetch();\n            return buffer;\n        })\n        .catch(error => {\n            if (error === 403) {\n                // Retrying this request will not help, so return an error now.\n                throw error;\n            }\n\n            console.warn(`Attempt to fetch ${url} failed`, error);\n            if (!firstError) {\n                firstError = error;\n            }\n\n            if (failedAttempts < 2) {\n                failedAttempts++;\n                return new Promise(cb => setTimeout(cb, (failedAttempts + Math.random() - 1) * 5000))\n                    .then(attemptToFetch);\n            }\n\n            currentFetches--;\n            checkStartNextFetch();\n            throw firstError;\n        });\n\n    return resolve(attemptToFetch());\n};\n\nconst checkStartNextFetch = () => {\n    if (currentFetches < 100 && queue.length > 0) {\n        currentFetches++;\n        startNextFetch(queue.shift());\n    }\n};\n\nconst saferFetchAsArrayBuffer = (url, options) => new Promise(resolve => {\n    queue.push([resolve, url, options]);\n    checkStartNextFetch();\n});\n\nmodule.exports = saferFetchAsArrayBuffer;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;AClDA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}