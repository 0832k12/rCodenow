{"version":3,"file":"js/addon-entry-disable-stage-drag-select.js","sources":["webpack://GUI/./src/addons/addons/disable-stage-drag-select/_runtime_entry.js","webpack://GUI/./src/addons/addons/disable-stage-drag-select/userscript.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./userscript.js\";\nexport const resources = {\n  \"userscript.js\": _js,\n};\n","export default async ({ addon, console }) => {\n  const vm = addon.tab.traps.vm;\n\n  let shiftKeyPressed = false;\n  document.addEventListener(\n    \"mousedown\",\n    function (e) {\n      shiftKeyPressed = e.shiftKey;\n    },\n    {\n      capture: true,\n    }\n  );\n\n  // Do not focus sprite after dragging it\n  const oldStopDrag = vm.stopDrag;\n  vm.stopDrag = function (...args) {\n    if (shiftKeyPressed || addon.self.disabled) return oldStopDrag.call(this, ...args);\n    const setEditingTarget = this.setEditingTarget;\n    this.setEditingTarget = () => {};\n    const r = oldStopDrag.call(this, ...args);\n    this.setEditingTarget = setEditingTarget;\n    return r;\n  };\n\n  // Don't let the editor drag sprites that aren't marked as draggable\n  const oldGetTargetIdForDrawableId = vm.getTargetIdForDrawableId;\n  vm.getTargetIdForDrawableId = function (...args) {\n    const targetId = oldGetTargetIdForDrawableId.call(this, ...args);\n    if (shiftKeyPressed || addon.self.disabled) return targetId;\n    if (targetId !== null) {\n      const target = this.runtime.getTargetById(targetId);\n      if (target && !target.draggable) {\n        return null;\n      }\n    }\n    return targetId;\n  };\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AADA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;A","sourceRoot":""}