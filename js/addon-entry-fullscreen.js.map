{"version":3,"file":"js/addon-entry-fullscreen.js","sources":["webpack://GUI/./src/addons/addons/fullscreen/hideOverflow.css","webpack://GUI/./src/addons/addons/fullscreen/hideToolbar.css","webpack://GUI/./src/addons/addons/fullscreen/removeBorder.css","webpack://GUI/./src/addons/addons/fullscreen/resizeWindow.css","webpack://GUI/./src/addons/addons/fullscreen/resizeWindow_noToolbar.css","webpack://GUI/./src/addons/addons/fullscreen/_runtime_entry.js","webpack://GUI/./src/addons/addons/fullscreen/userscript.js"],"sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sa-fullscreen.sa-body-editor {\\n  overflow: hidden !important;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage-header_stage-header-wrapper-overlay\\\"] {\\n  display: none;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] {\\n  top: 0rem !important;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_full-screen\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_green-flag-overlay-wrapper\\\"] {\\n  border: 0 !important;\\n  border-radius: 0 !important;\\n}\\n\\n[class*=\\\"stage_stage-overlays_\\\"][class*=\\\"stage_full-screen_\\\"] {\\n  top: 0;\\n  left: 0;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage-wrapper_stage-canvas-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_stage\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage-header_stage-menu-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] canvas {\\n  width: min(calc((100vh - 44px) * var(--sa-fullscreen-width) / var(--sa-fullscreen-height)), 100vw) !important;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage-wrapper_stage-canvas-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_stage\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_green-flag-overlay-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] canvas {\\n  height: min(calc(100vh - 44px), calc(100vw * var(--sa-fullscreen-height) / var(--sa-fullscreen-width))) !important;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] {\\n  padding: 0rem !important;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"monitor-list_monitor-list\\\"] {\\n  overflow: visible;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_question-wrapper\\\"] {\\n  width: auto !important;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage-wrapper_stage-canvas-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_stage\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage-header_stage-menu-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] canvas {\\n  width: min(calc(100vh * var(--sa-fullscreen-width) / var(--sa-fullscreen-height)), 100vw) !important;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage-wrapper_stage-canvas-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_stage\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_green-flag-overlay-wrapper\\\"],\\n[class*=\\\"stage-wrapper_full-screen\\\"] canvas {\\n  height: min(100vh, calc(100vw * var(--sa-fullscreen-height) / var(--sa-fullscreen-width))) !important;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] {\\n  padding: 0rem !important;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"monitor-list_monitor-list\\\"] {\\n  overflow: visible;\\n}\\n\\n[class*=\\\"stage-wrapper_full-screen\\\"] [class*=\\\"stage_question-wrapper\\\"] {\\n  width: auto !important;\\n}\\n\", \"\"]);\n\n// exports\n","/* generated by pull.js */\nimport _js from \"./userscript.js\";\nimport _css from \"!css-loader!./hideOverflow.css\";\nimport _css2 from \"!css-loader!./removeBorder.css\";\nimport _css3 from \"!css-loader!./resizeWindow.css\";\nimport _css4 from \"!css-loader!./resizeWindow_noToolbar.css\";\nimport _css5 from \"!css-loader!./hideToolbar.css\";\nexport const resources = {\n  \"userscript.js\": _js,\n  \"hideOverflow.css\": _css,\n  \"removeBorder.css\": _css2,\n  \"resizeWindow.css\": _css3,\n  \"resizeWindow_noToolbar.css\": _css4,\n  \"hideToolbar.css\": _css5,\n};\n","/**\n * Used for the automatic browser full screen setting\n * and for hiding the scrollbar in full screen.\n */\nexport default async function ({ addon, console }) {\n  const vm = addon.tab.traps.vm;\n  const updateStageSize = () => {\n    document.documentElement.style.setProperty('--sa-fullscreen-width', vm.runtime.stageWidth);\n    document.documentElement.style.setProperty('--sa-fullscreen-height', vm.runtime.stageHeight);\n  };\n  updateStageSize();\n  vm.on('STAGE_SIZE_CHANGED', updateStageSize);\n\n  // \"Browser fullscreen\" is defined as the mode that hides the browser UI.\n  function updateBrowserFullscreen() {\n    if (addon.settings.get(\"browserFullscreen\") && !addon.self.disabled) {\n      // If Scratch fullscreen is enabled, then browser fullscreen should also\n      // be enabled, and vice versa for disabling.\n      if (addon.tab.redux.state.scratchGui.mode.isFullScreen && document.fullscreenElement === null) {\n        document.documentElement.requestFullscreen();\n      } else if (!addon.tab.redux.state.scratchGui.mode.isFullScreen && document.fullscreenElement !== null) {\n        document.exitFullscreen();\n      }\n    }\n  }\n\n  // \"Scratch fullscreen\" is defined as the mode normally toggled by the\n  // rightmost button above the stage.\n  function updateScratchFullscreen() {\n    if (addon.settings.get(\"browserFullscreen\") && !addon.self.disabled) {\n      // If browser fullscreen is disabled, then Scratch fullscreen should also\n      // be disabled.\n      if (document.fullscreenElement === null && addon.tab.redux.state.scratchGui.mode.isFullScreen) {\n        addon.tab.redux.dispatch({\n          type: \"scratch-gui/mode/SET_FULL_SCREEN\",\n          isFullScreen: false,\n        });\n      }\n    }\n  }\n\n  async function setPageScrollbar() {\n    const body = await addon.tab.waitForElement(\".sa-body-editor\");\n    if (addon.tab.redux.state.scratchGui.mode.isFullScreen) {\n      body.classList.add(\"sa-fullscreen\");\n    } else {\n      body.classList.remove(\"sa-fullscreen\");\n    }\n  }\n\n  // Properly resize the canvas and scale variable monitors on stage resize.\n  let monitorScaler, resizeObserver, stage;\n  async function initScaler() {\n    monitorScaler = await addon.tab.waitForElement(\"[class*=monitor-list_monitor-list-scaler]\");\n    stage = await addon.tab.waitForElement('[class*=\"stage-wrapper_full-screen\"] [class*=\"stage_stage\"]');\n    resizeObserver = new ResizeObserver(() => {\n      const stageSize = stage.getBoundingClientRect();\n      // When switching between project page and editor, the canvas\n      // is removed from the DOM and inserted again in a different place.\n      // This causes the size to be reported as 0x0.\n      if (!stageSize.width || !stageSize.height) return;\n      // Width and height attributes of the canvas need to match the actual size.\n      const renderer = addon.tab.traps.vm.runtime.renderer;\n      if (renderer) renderer.resize(stageSize.width, stageSize.height);\n      // Scratch uses the `transform` CSS property on a stage overlay element\n      // to control the scaling of variable monitors.\n      const scale = stageSize.width / vm.runtime.stageWidth;\n      monitorScaler.style.transform = `scale(${scale}, ${scale})`;\n    });\n    resizeObserver.observe(stage);\n  }\n\n  initScaler();\n\n  // Running this on page load handles the case of the project initially\n  // loading in Scratch fullscreen mode.\n  setPageScrollbar();\n  updateBrowserFullscreen();\n\n  // Changing to or from Scratch fullscreen is signified by a state change\n  // (URL change doesn't work when editing project without project page)\n  addon.tab.redux.initialize();\n  addon.tab.redux.addEventListener(\"statechanged\", (e) => {\n    if (e.detail.action.type === \"scratch-gui/mode/SET_FULL_SCREEN\") {\n      initScaler();\n      updateBrowserFullscreen();\n      setPageScrollbar();\n    }\n  });\n  // Changing to or from browser fullscreen is signified by a window resize.\n  window.addEventListener(\"resize\", () => {\n    updateScratchFullscreen();\n  });\n  // Handles the case of F11 full screen AND document full screen being enabled\n  // at the same time.\n  document.addEventListener(\"fullscreenchange\", () => {\n    if (document.fullscreenElement === null && addon.tab.redux.state.scratchGui.mode.isFullScreen) {\n      addon.tab.redux.dispatch({\n        type: \"scratch-gui/mode/SET_FULL_SCREEN\",\n        isFullScreen: false,\n      });\n    }\n  });\n  // These handle the case of the user already being in Scratch fullscreen\n  // (without being in browser fullscreen) when the addon or sync option are\n  // dynamically enabled.\n  addon.settings.addEventListener(\"change\", () => {\n    updateBrowserFullscreen();\n  });\n  addon.self.addEventListener(\"disabled\", () => {\n    resizeObserver.disconnect();\n  });\n  addon.self.addEventListener(\"reenabled\", () => {\n    resizeObserver.observe(stage);\n    updateBrowserFullscreen();\n  });\n}\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;ACPA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}