{"version":3,"file":"js/addon-entry-block-count.js","sources":["webpack://GUI/./src/addons/addons/block-count/_runtime_entry.js","webpack://GUI/./src/addons/addons/block-count/blockcount.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./blockcount.js\";\nexport const resources = {\n  \"blockcount.js\": _js,\n};\n","export default async function ({ addon, console, msg }) {\n  const vm = addon.tab.traps.vm;\n\n  const getBlockCount = () => {\n    let blockCount = 0;\n    let scriptCount = 0;\n    let sprites = new Set(vm.runtime.targets.map((i) => i.sprite.blocks._blocks));\n    sprites.forEach((sprite, i) => {\n      scriptCount += Object.values(sprite).filter((o) => !o.parent).length; // Filter blocks that don't have a parent (meaning it's the top of a stack)\n      blockCount += Object.values(sprite).filter((o) => !o.shadow).length; // shadow blocks should be filtered out\n    });\n    return {\n      blockCount,\n      scriptCount,\n      spriteCount: sprites.size - 1, // Backdrop counts as a target so we can subtract it\n    };\n  };\n\n  const addLiveBlockCount = async () => {\n    if (vm.editingTarget) {\n      let handler = null;\n      while (true) {\n        const topBar = await addon.tab.waitForElement(\"[class^='menu-bar_main-menu']\", {\n          markAsSeen: true,\n          reduxEvents: [\n            \"scratch-gui/mode/SET_PLAYER\",\n            \"fontsLoaded/SET_FONTS_LOADED\",\n            \"scratch-gui/locales/SELECT_LOCALE\",\n          ],\n          reduxCondition: (state) => !state.scratchGui.mode.isPlayerOnly,\n        });\n        let display = topBar.appendChild(document.createElement(\"span\"));\n        addon.tab.displayNoneWhileDisabled(display);\n        display.style.order = 1;\n        display.style.padding = \"9px\";\n        display.innerText = msg(\"blocks\", { num: getBlockCount().blockCount });\n        let debounce; // debouncing values because of the way 'PROJECT_CHANGED' works\n        if (handler) {\n          vm.off(\"PROJECT_CHANGED\", handler);\n          vm.runtime.off(\"PROJECT_LOADED\", handler);\n        }\n        handler = async () => {\n          clearTimeout(debounce);\n          debounce = setTimeout(async () => {\n            display.innerText = msg(\"blocks\", { num: getBlockCount().blockCount });\n          }, 1000);\n        };\n        vm.on(\"PROJECT_CHANGED\", handler);\n        vm.runtime.on(\"PROJECT_LOADED\", handler);\n      }\n    } else {\n      let timeout = setTimeout(function () {\n        addLiveBlockCount();\n        clearTimeout(timeout);\n      }, 1000);\n    }\n  };\n\n  addLiveBlockCount();\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAKA;AAPA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}