{"version":3,"file":"js/addon-entry-custom-block-shape.js","sources":["webpack://GUI/./src/addons/addons/custom-block-shape/_runtime_entry.js","webpack://GUI/./src/addons/addons/custom-block-shape/userscript.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./userscript.js\";\nexport const resources = {\n  \"userscript.js\": _js,\n};\n","export default async function ({ addon, console }) {\n  var BlocklyInstance = await addon.tab.traps.getBlockly();\n\n  (function (Blockly) {\n    const BlockSvg = BlocklyInstance.BlockSvg;\n    var vm = addon.tab.traps.vm;\n\n    const { GRID_UNIT } = BlockSvg;\n\n    function updateAllBlocks() {\n      const workspace = Blockly.getMainWorkspace();\n      if (workspace) {\n        if (vm.editingTarget) {\n          vm.emitWorkspaceUpdate();\n        }\n        const flyout = workspace.getFlyout();\n        if (flyout) {\n          const flyoutWorkspace = flyout.getWorkspace();\n          Blockly.Xml.clearWorkspaceAndLoadFromXml(Blockly.Xml.workspaceToDom(flyoutWorkspace), flyoutWorkspace);\n          workspace.getToolbox().refreshSelection();\n          workspace.toolboxRefreshEnabled_ = true;\n        }\n      }\n    }\n\n    function applyChanges(\n      paddingSize = addon.settings.get(\"paddingSize\"),\n      cornerSize = addon.settings.get(\"cornerSize\"),\n      notchSize = addon.settings.get(\"notchSize\")\n    ) {\n      let multiplier = paddingSize / 100;\n      cornerSize = cornerSize / 100;\n      notchSize = notchSize / 100;\n      BlockSvg.SEP_SPACE_Y = 2 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_BLOCK_X = 16 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_BLOCK_X_OUTPUT = 12 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_BLOCK_X_SHADOW_OUTPUT = 10 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_BLOCK_Y = 12 * GRID_UNIT * multiplier;\n      BlockSvg.EXTRA_STATEMENT_ROW_Y = 8 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_BLOCK_X_WITH_STATEMENT = 40 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_BLOCK_Y_SINGLE_FIELD_OUTPUT = 8 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_BLOCK_Y_REPORTER = 10 * GRID_UNIT * multiplier;\n      BlockSvg.MIN_STATEMENT_INPUT_HEIGHT = 6 * GRID_UNIT * multiplier;\n      BlockSvg.NOTCH_WIDTH = 8 * GRID_UNIT * multiplier;\n      BlockSvg.NOTCH_HEIGHT = 2 * GRID_UNIT * multiplier * notchSize;\n      BlockSvg.NOTCH_START_PADDING = 3 * GRID_UNIT; //* multiplier\n      BlockSvg.ICON_SEPARATOR_HEIGHT = 10 * GRID_UNIT * multiplier;\n      BlockSvg.NOTCH_PATH_LEFT =\n        \"c 2,0 3,\" +\n        1 * notchSize +\n        \" 4,\" +\n        2 * notchSize +\n        \" l \" +\n        4 * multiplier * notchSize +\n        \",\" +\n        4 * multiplier * notchSize +\n        \" c 1,\" +\n        1 * notchSize +\n        \" 2,\" +\n        2 * notchSize +\n        \" 4,\" +\n        2 * notchSize +\n        \" h \" +\n        24 * (multiplier - 0.5) +\n        \" c 2,0 3,-\" +\n        1 * notchSize +\n        \" 4,-\" +\n        2 * notchSize +\n        \" l \" +\n        4 * multiplier * notchSize +\n        \",\" +\n        -4 * multiplier * notchSize +\n        \"c 1,-\" +\n        1 * notchSize +\n        \" 2,-\" +\n        2 * notchSize +\n        \" 4,-\" +\n        2 * notchSize;\n      BlockSvg.NOTCH_PATH_RIGHT =\n        \"h \" +\n        (-4 * (cornerSize - 1) - 5 * (1 - notchSize)) +\n        \"c -2,0 -3,\" +\n        1 * notchSize +\n        \" -4,\" +\n        2 * notchSize +\n        \" l \" +\n        -4 * multiplier * notchSize +\n        \",\" +\n        4 * multiplier * notchSize +\n        \" c -1,\" +\n        1 * notchSize +\n        \" -2,\" +\n        2 * notchSize +\n        \" -4,\" +\n        2 * notchSize +\n        \" h \" +\n        -24 * (multiplier - 0.5) +\n        \" c -2,0 -3,-\" +\n        1 * notchSize +\n        \" -4,-\" +\n        2 * notchSize +\n        \" l \" +\n        -4 * multiplier * notchSize +\n        \",\" +\n        -4 * multiplier * notchSize +\n        \"c -1,-\" +\n        1 * notchSize +\n        \" -2,-\" +\n        2 * notchSize +\n        \" -4,-\" +\n        2 * notchSize;\n      BlockSvg.INPUT_SHAPE_HEXAGONAL =\n        \"M \" +\n        4 * GRID_UNIT * multiplier +\n        \",0 \" +\n        \" h \" +\n        4 * GRID_UNIT +\n        \" l \" +\n        4 * GRID_UNIT * multiplier +\n        \",\" +\n        4 * GRID_UNIT * multiplier +\n        \" l \" +\n        -4 * GRID_UNIT * multiplier +\n        \",\" +\n        4 * GRID_UNIT * multiplier +\n        \" h \" +\n        -4 * GRID_UNIT +\n        \" l \" +\n        -4 * GRID_UNIT * multiplier +\n        \",\" +\n        -4 * GRID_UNIT * multiplier +\n        \" l \" +\n        4 * GRID_UNIT * multiplier +\n        \",\" +\n        -4 * GRID_UNIT * multiplier +\n        \" z\";\n      BlockSvg.INPUT_SHAPE_HEXAGONAL_WIDTH = 12 * GRID_UNIT * multiplier;\n      BlockSvg.INPUT_SHAPE_ROUND =\n        \"M \" +\n        4 * GRID_UNIT +\n        \",0\" +\n        \" h \" +\n        4 * GRID_UNIT +\n        \" a \" +\n        4 * GRID_UNIT +\n        \" \" +\n        4 * GRID_UNIT +\n        \" 0 0 1 0 \" +\n        8 * GRID_UNIT +\n        \" h \" +\n        -4 * GRID_UNIT +\n        \" a \" +\n        4 * GRID_UNIT +\n        \" \" +\n        4 * GRID_UNIT +\n        \" 0 0 1 0 -\" +\n        8 * GRID_UNIT +\n        \" z\";\n      BlockSvg.INPUT_SHAPE_ROUND_WIDTH = 12 * GRID_UNIT * multiplier;\n      BlockSvg.INPUT_SHAPE_HEIGHT = 8 * GRID_UNIT * multiplier;\n      BlockSvg.FIELD_HEIGHT = 8 * GRID_UNIT * multiplier; // NOTE: Determines string input heights\n      BlockSvg.FIELD_WIDTH = 6 * GRID_UNIT * Math.min(multiplier, 1) + 10 * GRID_UNIT * Math.max(multiplier - 1, 0);\n      BlockSvg.FIELD_DEFAULT_CORNER_RADIUS = 4 * GRID_UNIT * multiplier;\n      BlockSvg.EDITABLE_FIELD_PADDING = 1.5 * GRID_UNIT * multiplier;\n      BlockSvg.BOX_FIELD_PADDING = 2 * GRID_UNIT * multiplier;\n      BlockSvg.DROPDOWN_ARROW_PADDING = 2 * GRID_UNIT * multiplier;\n      BlockSvg.FIELD_WIDTH_MIN_EDIT = 8 * GRID_UNIT * multiplier;\n      BlockSvg.INPUT_AND_FIELD_MIN_X = 12 * GRID_UNIT * multiplier;\n      BlockSvg.INLINE_PADDING_Y = 1 * GRID_UNIT * multiplier; // For when reporters are inside reporters\n      BlockSvg.SHAPE_IN_SHAPE_PADDING[1][0] = 5 * GRID_UNIT * multiplier;\n      BlockSvg.SHAPE_IN_SHAPE_PADDING[1][2] = 5 * GRID_UNIT * multiplier;\n      BlockSvg.SHAPE_IN_SHAPE_PADDING[1][3] = 5 * GRID_UNIT * multiplier;\n\n      var originalDropdownObject = BlocklyInstance.FieldDropdown.prototype.positionArrow;\n      BlocklyInstance.FieldDropdown.prototype.positionArrow = function (x) {\n        this.arrowY_ = 11 * multiplier;\n        return originalDropdownObject.call(this, x);\n      };\n\n      // Corner setting\n      BlockSvg.CORNER_RADIUS = (1 * GRID_UNIT * cornerSize * 100) / 100;\n\n      BlockSvg.TOP_LEFT_CORNER_START = \"m 0,\" + BlockSvg.CORNER_RADIUS;\n\n      BlockSvg.TOP_LEFT_CORNER =\n        \"A \" + BlockSvg.CORNER_RADIUS + \",\" + BlockSvg.CORNER_RADIUS + \" 0 0,1 \" + BlockSvg.CORNER_RADIUS + \",0\";\n\n      BlockSvg.TOP_RIGHT_CORNER =\n        \"a \" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS +\n        \" 0 0,1 \" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS;\n\n      BlockSvg.BOTTOM_RIGHT_CORNER =\n        \" a \" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS +\n        \" 0 0,1 -\" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS;\n\n      BlockSvg.BOTTOM_LEFT_CORNER =\n        \"a \" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS +\n        \" 0 0,1 -\" +\n        BlockSvg.CORNER_RADIUS +\n        \",-\" +\n        BlockSvg.CORNER_RADIUS;\n\n      BlockSvg.INNER_TOP_LEFT_CORNER =\n        \" a \" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS +\n        \" 0 0,0 -\" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS;\n\n      BlockSvg.INNER_BOTTOM_LEFT_CORNER =\n        \"a \" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS +\n        \" 0 0,0 \" +\n        BlockSvg.CORNER_RADIUS +\n        \",\" +\n        BlockSvg.CORNER_RADIUS;\n\n      BlockSvg.TOP_RIGHT_CORNER_DEFINE_HAT =\n        \"a \" +\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\n        \",\" +\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\n        \" 0 0,1 \" +\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\n        \",\" +\n        BlockSvg.DEFINE_HAT_CORNER_RADIUS +\n        \" v \" +\n        (1 * GRID_UNIT - BlockSvg.CORNER_RADIUS);\n\n      BlockSvg.STATEMENT_INPUT_INNER_SPACE = 2.8 * GRID_UNIT - 0.9 * GRID_UNIT * cornerSize;\n    }\n\n    function applyAndUpdate(...args) {\n      applyChanges(...args);\n      updateAllBlocks();\n    }\n\n    addon.settings.addEventListener(\"change\", () => applyAndUpdate());\n\n    addon.self.addEventListener(\"disabled\", () => {\n      // Scratch 3.0 blocks\n      applyAndUpdate(100, 100, 100);\n    });\n\n    addon.self.addEventListener(\"reenabled\", () => applyAndUpdate());\n\n    applyAndUpdate();\n  })(window.Blockly);\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA+BA;AAiCA;AAyBA;AACA;AAqBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAUA;AAUA;AAUA;AAUA;AAUA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;A","sourceRoot":""}