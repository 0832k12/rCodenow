(window["webpackJsonpGUI"] = window["webpackJsonpGUI"] || []).push([["addon-entry-disable-stage-drag-select"],{

/***/ "./src/addons/addons/disable-stage-drag-select/_runtime_entry.js":
/*!***********************************************************************!*\
  !*** ./src/addons/addons/disable-stage-drag-select/_runtime_entry.js ***!
  \***********************************************************************/
/*! exports provided: resources */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resources", function() { return resources; });
/* harmony import */ var _userscript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userscript.js */ "./src/addons/addons/disable-stage-drag-select/userscript.js");
/* generated by pull.js */

const resources = {
  "userscript.js": _userscript_js__WEBPACK_IMPORTED_MODULE_0__["default"]
};

/***/ }),

/***/ "./src/addons/addons/disable-stage-drag-select/userscript.js":
/*!*******************************************************************!*\
  !*** ./src/addons/addons/disable-stage-drag-select/userscript.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (async ({
  addon,
  console
}) => {
  const vm = addon.tab.traps.vm;
  let shiftKeyPressed = false;
  document.addEventListener("mousedown", function (e) {
    shiftKeyPressed = e.shiftKey;
  }, {
    capture: true
  }); // Do not focus sprite after dragging it

  const oldStopDrag = vm.stopDrag;

  vm.stopDrag = function (...args) {
    if (shiftKeyPressed || addon.self.disabled) return oldStopDrag.call(this, ...args);
    const setEditingTarget = this.setEditingTarget;

    this.setEditingTarget = () => {};

    const r = oldStopDrag.call(this, ...args);
    this.setEditingTarget = setEditingTarget;
    return r;
  }; // Don't let the editor drag sprites that aren't marked as draggable


  const oldGetTargetIdForDrawableId = vm.getTargetIdForDrawableId;

  vm.getTargetIdForDrawableId = function (...args) {
    const targetId = oldGetTargetIdForDrawableId.call(this, ...args);
    if (shiftKeyPressed || addon.self.disabled) return targetId;

    if (targetId !== null) {
      const target = this.runtime.getTargetById(targetId);

      if (target && !target.draggable) {
        return null;
      }
    }

    return targetId;
  };
});

/***/ })

}]);
//# sourceMappingURL=addon-entry-disable-stage-drag-select.js.map