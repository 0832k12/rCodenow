{"version":3,"file":"js/addon-entry-editor-extra-keys.js","sources":["webpack://GUI/./src/addons/addons/editor-extra-keys/_runtime_entry.js","webpack://GUI/./src/addons/addons/editor-extra-keys/userscript.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./userscript.js\";\nexport const resources = {\n  \"userscript.js\": _js,\n};\n","export default async function ({ addon, msg }) {\n  const ScratchBlocks = await addon.tab.traps.getBlockly();\n\n  let defaultKeys = null;\n  function appendKeys(keys, enableShiftKeys) {\n    if (!defaultKeys) {\n      defaultKeys = [...keys];\n    }\n    if (!addon.self.disabled) {\n      keys.push(\n        ...[\n          [\"-\", \"-\"],\n          [\",\", \",\"],\n          [\".\", \".\"],\n        ]\n      );\n      keys.splice(5, 0, [msg(\"enter-key\"), \"enter\"]);\n      if (addon.settings.get(\"experimentalKeys\")) {\n        keys.push(\n          ...[\n            [\"`\", \"`\"],\n            [\"=\", \"=\"],\n            [\"[\", \"[\"],\n            [\"]\", \"]\"],\n            [\"\\\\\", \"\\\\\"],\n            [\";\", \";\"],\n            [\"'\", \"'\"],\n            [\"/\", \"/\"],\n          ]\n        );\n      }\n      if (enableShiftKeys && addon.settings.get(\"shiftKeys\")) {\n        keys.push(\n          ...[\n            [\"!\", \"!\"],\n            [\"@\", \"@\"],\n            [\"#\", \"#\"],\n            [\"$\", \"$\"],\n            [\"%\", \"%\"],\n            [\"^\", \"^\"],\n            [\"&\", \"&\"],\n            [\"*\", \"*\"],\n            [\"(\", \"(\"],\n            [\")\", \")\"],\n            [\"_\", \"_\"],\n            [\"+\", \"+\"],\n            [\"{\", \"{\"],\n            [\"}\", \"}\"],\n            [\"|\", \"|\"],\n            [\":\", \":\"],\n            ['\"', '\"'],\n            [\"?\", \"?\"],\n            [\"<\", \"<\"],\n            [\">\", \">\"],\n            [\"~\", \"~\"],\n          ]\n        );\n      }\n      if (addon.settings.get(\"twKeys\")) {\n        keys.push(\n          ...[\n            [\"backspace\", \"backspace\"],\n            [\"delete\", \"delete\"],\n            [\"shift\", \"shift\"],\n            [\"caps lock\", \"caps lock\"],\n            [\"scroll lock\", \"scroll lock\"],\n            [\"control\", \"control\"],\n            [\"escape\", \"escape\"],\n            [\"insert\", \"insert\"],\n            [\"home\", \"home\"],\n            [\"end\", \"end\"],\n            [\"page up\", \"page up\"],\n            [\"page down\", \"page down\"],\n          ]\n        );\n      }\n    }\n    return keys;\n  }\n\n  for (const opcode of [\"sensing_keyoptions\", \"event_whenkeypressed\"]) {\n    const block = ScratchBlocks.Blocks[opcode];\n    const originalInit = block.init;\n    block.init = function (...args) {\n      const originalJsonInit = this.jsonInit;\n      this.jsonInit = function (obj) {\n        appendKeys(obj.args0[0].options, opcode === \"event_whenkeypressed\");\n        return originalJsonInit.call(this, obj);\n      };\n      return originalInit.call(this, ...args);\n    };\n  }\n\n  const updateExistingBlocks = () => {\n    const workspace = Blockly.getMainWorkspace();\n    const flyout = workspace && workspace.getFlyout();\n    if (workspace && flyout) {\n      const allBlocks = [...workspace.getAllBlocks(), ...flyout.getWorkspace().getAllBlocks()];\n      for (const block of allBlocks) {\n        if (block.type !== \"event_whenkeypressed\" && block.type !== \"sensing_keyoptions\") {\n          continue;\n        }\n        const input = block.inputList[0];\n        if (!input) {\n          continue;\n        }\n        const field = input.fieldRow.find((i) => i && Array.isArray(i.menuGenerator_));\n        if (!field) {\n          continue;\n        }\n        field.menuGenerator_ = appendKeys(\n          defaultKeys ? [...defaultKeys] : field.menuGenerator_,\n          block.type === \"event_whenkeypressed\"\n        );\n      }\n    }\n  };\n\n  updateExistingBlocks();\n  addon.settings.addEventListener(\"change\", updateExistingBlocks);\n  addon.self.addEventListener(\"disabled\", updateExistingBlocks);\n  addon.self.addEventListener(\"reenabled\", updateExistingBlocks);\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAOA;AACA;AAAA;AACA;AAYA;AACA;AAAA;AACA;AAyBA;AACA;AAAA;AACA;AAgBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}